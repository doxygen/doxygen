<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="" xml:lang="en-US">
  <compounddef id="namespacens" kind="namespace" language="C++">
    <compoundname>ns</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacens_1afd2e8a8437eff630f52a452ea6dc6e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ns::operator""_op</definition>
        <argsstring>(unsigned long long)</argsstring>
        <name>operator""_op</name>
        <qualifiedname>ns::operator""_op</qualifiedname>
        <param>
          <type>unsigned long long</type>
        </param>
        <briefdescription>
          <para>An operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="074_ref.cpp" line="67" column="5" declfile="074_ref.cpp" declline="67" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespacens_1a47f70e51e66b81b8383a4e2da66f1e09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ns::operator""_oq</definition>
        <argsstring>(unsigned long long)</argsstring>
        <name>operator""_oq</name>
        <qualifiedname>ns::operator""_oq</qualifiedname>
        <param>
          <type>unsigned long long</type>
        </param>
        <briefdescription>
          <para>Another operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="074_ref.cpp" line="70" column="5" declfile="074_ref.cpp" declline="70" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="namespacens_1aaa9eb8a7b40d4ed0edbe5e163b4e6e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ns::foo</definition>
        <argsstring>(std::initializer_list&lt; int * &gt;)</argsstring>
        <name>foo</name>
        <qualifiedname>ns::foo</qualifiedname>
        <param>
          <type>std::initializer_list&lt; int * &gt;</type>
        </param>
        <briefdescription>
          <para>Function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="074_ref.cpp" line="73" column="6" declfile="074_ref.cpp" declline="73" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
      <para>A namespace. </para>
    </briefdescription>
    <detaileddescription>
      <para>
        <itemizedlist>
          <listitem>
            <para>Link to an UDL w/o spaces: <ref refid="namespacens_1afd2e8a8437eff630f52a452ea6dc6e82" kindref="member">operator""_op</ref></para>
          </listitem>
          <listitem>
            <para>Link to an UDL with spaces: <ref refid="namespacens_1a47f70e51e66b81b8383a4e2da66f1e09" kindref="member">operator""_oq</ref></para>
          </listitem>
          <listitem>
            <para>Link to a function with spaces: <ref refid="namespacens_1aaa9eb8a7b40d4ed0edbe5e163b4e6e8d" kindref="member">foo(std::initializer_list&lt; int* &gt;)</ref></para>
          </listitem>
          <listitem>
            <para>Link to a function w/o spaces: <ref refid="namespacens_1aaa9eb8a7b40d4ed0edbe5e163b4e6e8d" kindref="member">foo(std::initializer_list&lt;int*&gt;)</ref> </para>
          </listitem>
        </itemizedlist>
      </para>
    </detaileddescription>
    <location file="074_ref.cpp" line="64" column="1"/>
  </compounddef>
</doxygen>
