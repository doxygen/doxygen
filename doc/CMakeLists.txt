if (build_doc)

find_program(EPSTOPDF NAMES epstopdf )
find_program(SED NAMES sed )
if (WIN32)
    set(CMD1 cd ..\\latex)
    set(MAKE "make.bat"  CACHE FILEPATH "Windows uses generated make.bat")
    set(CMD2 make.bat > ..\\latex_out.txt )
    set(CMD3 cd ..\\doc)
    set(CMD4 ${CMAKE_COMMAND} -E copy make.bat ../latex/make.bat)
else(WIN32)
    find_program(MAKE NAMES make gmake nmake )
    set(CMD1 )
    set(CMD2 ${MAKE} -C ../latex > latex_out.txt)
    set(CMD3 )
    set(CMD4 )
endif(WIN32)

file(GLOB DOC_FILES "*")
file(GLOB LANG_FILES "${CMAKE_SOURCE_DIR}/src/translator_??.h")
file(COPY ${DOC_FILES}   DESTINATION ${DOXYDOCS})
file(COPY ${EXAMPLE_DIR} DESTINATION ${PROJECT_BINARY_DIR})

file(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/man)
file(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/src)
file(COPY ${CMAKE_SOURCE_DIR}/src/translator.h DESTINATION ${PROJECT_BINARY_DIR}/src)
file(COPY ${CMAKE_SOURCE_DIR}/src/translator_adapter.h DESTINATION ${PROJECT_BINARY_DIR}/src)
file(COPY ${LANG_FILES} DESTINATION ${PROJECT_BINARY_DIR}/src)
file(COPY ${CMAKE_SOURCE_DIR}/VERSION DESTINATION ${PROJECT_BINARY_DIR})

add_custom_target(docs
	COMMENT "Generating documentation in ${DOXYDOCS}"
	COMMAND ${EXECUTABLE_OUTPUT_PATH}/doxygen
	COMMAND ${CMAKE_COMMAND} -E remove_directory ../latex/refman.tex
	COMMAND ${CMAKE_COMMAND} -E copy doxygen_logo.gif ../html
	COMMAND ${CMAKE_COMMAND} -E copy doxygen_logo_low.gif ../html
	COMMAND ${CMAKE_COMMAND} -E copy Makefile.latex ../latex/Makefile
        COMMAND ${CMD4}
	COMMAND ${SED} -e "s/\$VERSION/${VERSION}/g" doxygen_manual.tex > ../latex/doxygen_manual.tex
	COMMAND ${SED} -e "s/\$VERSION/${VERSION}/g" doxygen.sty > ../latex/doxygen.sty
	COMMAND ${EPSTOPDF} doxygen_logo.eps --outfile=../latex/doxygen_logo.pdf
        COMMAND ${CMD1}
        COMMAND ${CMD2}
        COMMAND ${CMD3}
	DEPENDS doxygen ${PROJECT_BINARY_DIR}/doc/language.doc config.doc
                "${PROJECT_BINARY_DIR}/man/doxygen.1"
                "${PROJECT_BINARY_DIR}/man/doxywizard.1"
                "${PROJECT_BINARY_DIR}/man/doxysearch.1"
                "${PROJECT_BINARY_DIR}/man/doxyindexer.1"
	WORKING_DIRECTORY ${DOXYDOCS}
	VERBATIM
	)

# language.doc
add_custom_command(
        COMMAND ${CMAKE_COMMAND} "-DSOURCE=${CMAKE_SOURCE_DIR}" -P ${CMAKE_SOURCE_DIR}/cmake/run_translator.cmake
	DEPENDS ${DOXYDOCS}/translator.py
	DEPENDS maintainers.txt language.tpl translator.py
	OUTPUT ${PROJECT_BINARY_DIR}/doc/language.doc
	WORKING_DIRECTORY ${DOXYDOCS}
)
set_source_files_properties(${DOXYDOCS}/language.doc PROPERTIES GENERATED 1)

# config.doc
add_custom_command(
	COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_SOURCE_DIR}/src/configgen.py -doc ${CMAKE_SOURCE_DIR}/src/config.xml > config.doc
	DEPENDS ${CMAKE_SOURCE_DIR}/src/config.xml ${CMAKE_SOURCE_DIR}/src/configgen.py
	OUTPUT config.doc
	WORKING_DIRECTORY ${DOXYDOCS}
)
set_source_files_properties(${DOXYDOCS}/config.doc PROPERTIES GENERATED 1)

string(TIMESTAMP TODAY "%d-%m-%Y")

add_custom_command(
	COMMAND ${SED} -e "s/DATE/${TODAY}/g" -e "s/VERSION/${VERSION}/g" doxygen.1 > "${PROJECT_BINARY_DIR}/man/doxygen.1"
        OUTPUT "${PROJECT_BINARY_DIR}/man/doxygen.1"
)

add_custom_command(
	COMMAND ${SED} -e "s/DATE/${TODAY}/g" -e "s/VERSION/${VERSION}/g" doxywizard.1 > "${PROJECT_BINARY_DIR}/man/doxywizard.1"
        OUTPUT "${PROJECT_BINARY_DIR}/man/doxywizard.1"
)

add_custom_command(
	COMMAND ${SED} -e "s/DATE/${TODAY}/g" -e "s/VERSION/${VERSION}/g" doxysearch.1 > "${PROJECT_BINARY_DIR}/man/doxysearch.1"
        OUTPUT "${PROJECT_BINARY_DIR}/man/doxysearch.1"
)

add_custom_command(
	COMMAND ${SED} -e "s/DATE/${TODAY}/g" -e "s/VERSION/${VERSION}/g" doxyindexer.1 > "${PROJECT_BINARY_DIR}/man/doxyindexer.1"
        OUTPUT "${PROJECT_BINARY_DIR}/man/doxyindexer.1"
)

install(FILES
        "${PROJECT_BINARY_DIR}/man/doxygen.1"
        "${PROJECT_BINARY_DIR}/man/doxywizard.1"
        "${PROJECT_BINARY_DIR}/man/doxysearch.1"
        "${PROJECT_BINARY_DIR}/man/doxyindexer.1"
        DESTINATION man/man1
)

install(FILES
        "${PROJECT_BINARY_DIR}/latex/doxygen_manual.pdf"
        DESTINATION "${CMAKE_INSTALL_PREFIX}/${DOC_INSTALL_DIR}"
)

install(DIRECTORY
        "${PROJECT_BINARY_DIR}/examples"
        "${PROJECT_BINARY_DIR}/html"
        DESTINATION "${CMAKE_INSTALL_PREFIX}/${DOC_INSTALL_DIR}"
)

endif()
