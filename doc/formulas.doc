/******************************************************************************
 *
 * 
 *
 * Copyright (C) 1997-2015 by Dimitri van Heesch.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation under the terms of the GNU General Public License is hereby 
 * granted. No representations are made about the suitability of this software 
 * for any purpose. It is provided "as is" without express or implied warranty.
 * See the GNU General Public License for more details.
 *
 * Documents produced by Doxygen are derivative works derived from the
 * input used in their production; they are not affected by this license.
 *
 */
/*! \page formulas Including formulas 

Doxygen allows you to put \LaTeX formulas in the
output (this works only for the HTML, \LaTeX, Docbook and RTF output. To be able to include 
formulas (as b/w images) in the HTML, Docbook and RTF documentation, you will also need to 
have the following tools installed
<ul>
<li>\c latex: the \LaTeX compiler, needed to parse the formulas. 
<li>\c dvips: a tool to convert DVI files to PostScript files 
<li>\c ps2epsi: to get the bounding box from PostScript files
<li>\c gs: the GhostScript interpreter for converting PostScript files to bitmaps.
</ul>
For the HTML output there is also an alternative solution using
<a href="https://www.mathjax.org">MathJax</a> which does not
require the above tools. If you enable \ref cfg_use_mathjax "USE_MATHJAX" in
the configuration then the latex formulas will be copied to the HTML "as is" and a
client side javascript will parse them and turn them into (interactive) images.<br>
Note that MathJax only supports a part of the possibilities from \LaTeX.<br>
For \LaTeX the formulas are also "as is" into the \LaTeX output, so in principle the
full palette of \LaTeX.s available<br>

There are basically three ways to include formulas in the documentation.
<ol>
<li>Using in-text formulas that appear in the running text. 
    These formulas should be put between a pair of \\f\$ 
    commands, so
\verbatim
  The distance between \f$(x_1,y_1)\f$ and \f$(x_2,y_2)\f$ is 
  \f$\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}\f$.
\endverbatim results in:

  The distance between \f$(x_1,y_1)\f$ and \f$(x_2,y_2)\f$ is 
  \f$\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}\f$.
<br>
<li>Unnumbered displayed formulas that are centered on a separate line.
    These formulas should be put between \\f[ and \\f] commands.
    An example:
\verbatim
  \f[
    |I_2|=\left| \int_{0}^T \psi(t) 
             \left\{ 
                u(a,t)-
                \int_{\gamma(t)}^a 
                \frac{d\theta}{k(\theta,t)}
                \int_{a}^\theta c(\xi)u_t(\xi,t)\,d\xi
             \right\} dt
          \right|
  \f]
\endverbatim
  results in:
  \f[
    |I_2|=\left| \int_{0}^T \psi(t) 
             \left\{ 
                u(a,t)-
                \int_{\gamma(t)}^a 
                \frac{d\theta}{k(\theta,t)}
                \int_{a}^\theta c(\xi)u_t(\xi,t)\,d\xi
             \right\} dt
          \right|
  \f]
<li>Formulas or other latex elements that are not in a math 
    environment can be specified using \\f{environment}, where
    \c environment is the name of the \LaTeX environment, 
    the corresponding end command is \\f}. Here is an example for an 
    equation array
\verbatim
   \f{eqnarray*}{
        g &=& \frac{Gm_2}{r^2} \\ 
          &=& \frac{(6.673 \times 10^{-11}\,\mbox{m}^3\,\mbox{kg}^{-1}\,
              \mbox{s}^{-2})(5.9736 \times 10^{24}\,\mbox{kg})}{(6371.01\,\mbox{km})^2} \\ 
          &=& 9.82066032\,\mbox{m/s}^2
   \f}
\endverbatim
  which results in:
   \f{eqnarray*}
        g &=& \frac{Gm_2}{r^2} \\ 
          &=& \frac{(6.673 \times 10^{-11}\,\mbox{m}^3\,\mbox{kg}^{-1}\,
              \mbox{s}^{-2})(5.9736 \times 10^{24}\,\mbox{kg})}{(6371.01\,\mbox{km})^2} \\ 
          &=& 9.82066032\,\mbox{m/s}^2
   \f}
</ol>
For the first two commands one should make sure formulas contain 
valid commands in \LaTeX's math-mode. For the third command
the section should contain valid command for the specific environment.

As written before the above mentioned commands, when generating images, are generating b/w images to be included
in the documentation.
(in case of \LaTeX the formula is used "as is", and in MathJax the formulas are limited to the \LaTeX that is
supported by MathJax).<br>
To overcome the b/w limitations the analogous command pairs `\fig$...\fig$`, `\fig[...\fig]` and `\fig{...\fig}`
exists. For \LaTeX there is no difference as the formula code is still placed "as is" in the latex output, for the
other formats always images are included in a similar way as for the `\f...` commands, but without the conversion to
b/w, so having the possibility to use the full palette of \LaTeX commands. (Note for obvious reasons the MahtJax
possibility does not existt for the `\fig...` commands).

\warning Currently, doxygen is not very fault tolerant in recovering 
from typos in formulas. It may be necessary to remove the
files <code>formula.repository</code> that are written to the html, docbook and rtf output directories to 
get rid of an incorrect formula as well as the <code>form_*</code> files (in case of `\f...` type commands,
in case if `\fig...` type commands the names are <code>figure.repository</code> and <code>figform_*</code>).

\htmlonly
Go to the <a href="tables.html">next</a> section or return to the
 <a href="index.html">index</a>.
\endhtmlonly

*/
