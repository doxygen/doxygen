/*! \page perlmod Perl Module Output

\addindex perlmod

<p>Since version 1.2.18, doxygen can generate a new output format we 
have called the &quot;Perl Module output format&quot;.  It has been 
designed as an intermediate format that can be used to generate new 
and customized output without having to modify the doxygen source. 
Therefore, its purpose is similar to the XML output format that can be 
also generated by doxygen.  The XML output format is more standard, 
but the Perl Module output format is possibly simpler and easier to 
use.

<p>The Perl Module output format is still experimental at the moment 
and could be changed in incompatible ways in future versions, although 
this should not be very probable.  It is also lacking some features of 
other doxygen backends.  However, it can be already used to generate 
useful output, as shown by the Perl Module-based \LaTeX generator.

<p>Please report any bugs or problems you find in the Perl Module 
backend or the Perl Module-based \LaTeX generator to the 
<a href="https://github.com/doxygen/doxygen/issues">doxygen issue tracker</a>.
Suggestions are welcome as well (see also: \ref bug_reports "How to report a bug").

\section using_perlmod_fmt Usage

<p>When the \ref cfg_generate_perlmod "GENERATE_PERLMOD" tag is enabled in the `Doxyfile`, 
running doxygen generates a number of files in the `perlmod/` 
subdirectory of your output directory.  These files are the following:

<ul>

<li>`DoxyDocs.pm`:  This is the Perl module that actually
contains the documentation, in the Perl Module format described 
\ref doxydocs_format "below".

<li>`DoxyModel.pm`:  This Perl module describes the structure of
`DoxyDocs.pm`, independently of the actual documentation.  See 
\ref doxymodel_format "below" for details.

<li>`doxyrules.make`:  This file contains the make rules to build 
and clean the files that are generated from the `Doxyfile`.  Also 
contains the paths to those files and other relevant information. This 
file is intended to be included by your own Makefile.

<li>`Makefile`:  This is a simple Makefile including 
`doxyrules.make`.

</ul>

<p>To make use of the documentation stored in `DoxyDocs.pm` you can use
one of the default Perl Module-based generators provided by doxygen
(at the moment this includes the Perl Module-based \LaTeX generator,
see \ref perlmod_latex "below") or write your own customized
generator.  This should not be too hard if you have some knowledge of
Perl and it's the main purpose of including the Perl Module backend in
doxygen.  See \ref doxydocs_format "below" for details on how
to do this.

<!-- want to use \LaTeX but not possible in headings -->
\section perlmod_latex Using the LaTeX generator.

<p>The Perl Module-based \LaTeX generator is pretty experimental and
incomplete at the moment, but you could find it useful nevertheless.
It can generate documentation for functions, typedefs and variables
within files and classes and can be customized quite a lot by
redefining \TeX macros.  However, there is still no documentation on
how to do this.

<p>Setting the \ref cfg_perlmod_latex "PERLMOD_LATEX" tag to \c YES in the 
\c Doxyfile enables the creation of some additional files in the `perlmod/` 
subdirectory of your output directory.  These files contain the Perl 
scripts and \LaTeX code necessary to generate PDF and DVI output from 
the Perl Module output, using `pdflatex` and `latex` respectively.  Rules 
to automate the use of these files are also added to 
`doxyrules.make` and the `Makefile`.

<p>The additional generated files are the following:

<ul>

<li>`doxylatex.pl`: This Perl script uses `DoxyDocs.pm` and 
`DoxyModel.pm` to generate `doxydocs.tex`, a \TeX file containing 
the documentation in a format that can be accessed by \LaTeX code. This 
file is not directly LaTeXable.

<li>`doxyformat.tex`: This file contains the \LaTeX code that 
transforms the documentation from doxydocs.tex into \LaTeX text 
suitable to be \LaTeX'ed and presented to the user.

<li>`doxylatex-template.pl`:  This Perl script uses `DoxyModel.pm` 
to generate `doxytemplate.tex`, a \TeX file defining default 
values for some macros.  `doxytemplate.tex` is included by 
doxyformat.tex to avoid the need of explicitly defining some macros.

<li>`doxylatex.tex`:  This is a very simple \LaTeX document that 
loads some packages and includes `doxyformat.tex` and `doxydocs.tex`. This 
document is \LaTeX'ed to produce the PDF and DVI documentation by the 
rules added to `doxyrules.make`.

</ul>

\subsection pm_pdf_gen Creation of PDF and DVI output 

<p>To try this you need to have installed `latex`, `pdflatex` and the 
packages used by `doxylatex.tex`.

<ol>

<li>Update your `Doxyfile` to the latest version using:

<pre>doxygen -u Doxyfile</pre>

<li>Set both \ref cfg_generate_perlmod "GENERATE_PERLMOD" and 
\ref cfg_perlmod_latex "PERLMOD_LATEX" tags to 
\c YES in your `Doxyfile`.

<li>Run doxygen on your `Doxyfile`:

<pre>doxygen Doxyfile</pre>

<li>A `perlmod/` subdirectory should have appeared in your output 
directory.  Enter the `perlmod/` subdirectory and run:

<pre>make pdf</pre>

<p>This should generate a `doxylatex.pdf` with the documentation 
in PDF format.

<li>Run:

<pre>make dvi</pre>

<p>This should generate a `doxylatex.dvi` with the documentation 
in DVI format.

</ol>

\section doxydocs_format Documentation format.

<p>The Perl Module documentation generated by doxygen is stored in 
`DoxyDocs.pm`.  This is a very simple Perl module that contains 
only two statements: an assignment to the variable `$doxydocs` and 
the customary `1;` statement which usually ends Perl modules.  
The documentation is stored in the variable `$doxydocs`, which 
can then be accessed by a Perl script using `DoxyDocs.pm`.

<p>`$doxydocs` contains a tree-like structure composed of three 
types of nodes: strings, hashes and lists.

<ul>

<li>`Strings`: These are normal Perl strings.  They can be of 
any length can contain any character.  Their semantics depends on 
their location within the tree.  This type of node has no children.

<li>`Hashes`:  These are references to anonymous Perl hashes.  A 
hash can have multiple fields, each with a different key.  The value 
of a hash field can be a string, a hash or a list, and its semantics 
depends on the key of the hash field and the location of the hash 
within the tree.  The values of the hash fields are the children of 
the node.

<li>`Lists`:  These are references to anonymous Perl lists.  A 
list has an undefined number of elements, which are the children of 
the node.  Each element has the same type (string, hash or list) and 
the same semantics, depending on the location of the list within the 
tree.

</ul>

<p>As you can see, the documentation contained in `$doxydocs`
does not present any special impediment to be processed by a simple
Perl script.  

\section doxymodel_format Data structure

<p>You might be interested in processing the documentation contained
in `DoxyDocs.pm` without needing to take into account the
semantics of each node of the documentation tree.  For this purpose,
doxygen generates a `DoxyModel.pm` file which contains a data
structure describing the type and children of each node in the
documentation tree.

<p>The rest of this section is to be written yet, but in the meantime
you can look at the Perl scripts generated by doxygen (such as
`doxylatex.pl` or `doxytemplate-latex.pl`) to get an idea on
how to use `DoxyModel.pm`.

\section perlmod_tree Perl Module Tree Nodes

<h3>Nodes in the documentation tree of the Perl Module output
format.</h3>

This is a description of the structure of the documentation tree in
<b>DoxyDocs.pm</b>.  Each item in the list below describes a node in
the tree, and the format of the description is as follows:

<ul>
<li>[ key =&gt; ] <b>Name</b> <i>(type)</i>.  Explanation of the content.
</ul>

Where

<ul>

<li>The "key =>" part only appears if the parent node is a hash.
"key" is the key for this node.

<li><b>"Name"</b> is a unique name for the node, defined in
DoxyModel.pm.

<li><i>"(type)"</i> is the type of the node: "string" for string
nodes, "hash" for hash nodes, "list" for list nodes, and "doc" for
documentation subtrees.  The structure of documentation subtrees is
not described anywhere yet, but you can look for example at
<b>doxylatex.pl</b> to see how to process it.

</ul>

The meaning of each node in the documentation tree is as follows:
<ul>
<li> <b>Root</b> <i>(hash)</i>. Root node.
<ul>
<li>classes =&gt; <b>Classes</b> <i>(list)</i>. Documented classes.
<ul>
<li> <b>Class</b> <i>(hash)</i>. A documented class.
<ul>
<li>protected_members =&gt; <b>ClassProtectedMembers</b> <i>(hash)</i>. Information about the protected members in the class.
<ul>
<li>members =&gt; <b>ClassProtectedMemberList</b> <i>(list)</i>. protected member list.
<ul>
<li> <b>ClassProtectedMember</b> <i>(hash)</i>. A protected member.
<ul>
<li>protection =&gt; <b>ClassProtectedMemberProtection</b> <i>(string)</i>. Protection of the protected member.
<li>detailed =&gt; <b>ClassProtectedMemberDetailed</b> <i>(hash)</i>. Detailed information about the protected member.
<ul>
<li>doc =&gt; <b>ClassProtectedMemberDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the protected member.
<li>see =&gt; <b>ClassProtectedMemberSee</b> <i>(doc)</i>. "See also" documentation for the protected member.
</ul>
<li>kind =&gt; <b>ClassProtectedMemberKind</b> <i>(string)</i>. Kind of protected member (usually "variable").
<li>name =&gt; <b>ClassProtectedMemberName</b> <i>(string)</i>. Name of the protected member.
<li>type =&gt; <b>ClassProtectedMemberType</b> <i>(string)</i>. Data type of the protected member.
</ul>
</ul>
</ul>
<li>detailed =&gt; <b>ClassDetailed</b> <i>(hash)</i>. Detailed information about the class.
<ul>
<li>doc =&gt; <b>ClassDetailedDoc</b> <i>(doc)</i>. Detailed documentation block for the class.
</ul>
<li>protected_typedefs =&gt; <b>ClassProtectedTypedefs</b> <i>(hash)</i>. Information about the protected typedefs in the class.
<ul>
<li>members =&gt; <b>ClassProtectedTypedefList</b> <i>(list)</i>. protected typedef list.
<ul>
<li> <b>ClassProtectedTypedef</b> <i>(hash)</i>. A protected typedef.
<ul>
<li>protection =&gt; <b>ClassProtectedTypedefProtection</b> <i>(string)</i>. Protection of the protected typedef.
<li>detailed =&gt; <b>ClassProtectedTypedefDetailed</b> <i>(hash)</i>. Detailed information about the protected typedef.
<ul>
<li>doc =&gt; <b>ClassProtectedTypedefDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the protected typedef.
<li>see =&gt; <b>ClassProtectedTypedefSee</b> <i>(doc)</i>. "See also" documentation for the protected typedef.
</ul>
<li>kind =&gt; <b>ClassProtectedTypedefKind</b> <i>(string)</i>. Kind of protected typedef (usually "typedef").
<li>name =&gt; <b>ClassProtectedTypedefName</b> <i>(string)</i>. Name of the protected typedef.
<li>type =&gt; <b>ClassProtectedTypedefType</b> <i>(string)</i>. Data type of the protected typedef.
</ul>
</ul>
</ul>
<li>name =&gt; <b>ClassName</b> <i>(string)</i>. Name of the class.
<li>private_members =&gt; <b>ClassPrivateMembers</b> <i>(hash)</i>. Information about the private members in the class.
<ul>
<li>members =&gt; <b>ClassPrivateMemberList</b> <i>(list)</i>. private member list.
<ul>
<li> <b>ClassPrivateMember</b> <i>(hash)</i>. A private member.
<ul>
<li>protection =&gt; <b>ClassPrivateMemberProtection</b> <i>(string)</i>. Protection of the private member.
<li>detailed =&gt; <b>ClassPrivateMemberDetailed</b> <i>(hash)</i>. Detailed information about the private member.
<ul>
<li>doc =&gt; <b>ClassPrivateMemberDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the private member.
<li>see =&gt; <b>ClassPrivateMemberSee</b> <i>(doc)</i>. "See also" documentation for the private member.
</ul>
<li>kind =&gt; <b>ClassPrivateMemberKind</b> <i>(string)</i>. Kind of private member (usually "variable").
<li>name =&gt; <b>ClassPrivateMemberName</b> <i>(string)</i>. Name of the private member.
<li>type =&gt; <b>ClassPrivateMemberType</b> <i>(string)</i>. Data type of the private member.
</ul>
</ul>
</ul>
<li>private_typedefs =&gt; <b>ClassPrivateTypedefs</b> <i>(hash)</i>. Information about the private typedefs in the class.
<ul>
<li>members =&gt; <b>ClassPrivateTypedefList</b> <i>(list)</i>. private typedef list.
<ul>
<li> <b>ClassPrivateTypedef</b> <i>(hash)</i>. A private typedef.
<ul>
<li>protection =&gt; <b>ClassPrivateTypedefProtection</b> <i>(string)</i>. Protection of the private typedef.
<li>detailed =&gt; <b>ClassPrivateTypedefDetailed</b> <i>(hash)</i>. Detailed information about the private typedef.
<ul>
<li>doc =&gt; <b>ClassPrivateTypedefDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the private typedef.
<li>see =&gt; <b>ClassPrivateTypedefSee</b> <i>(doc)</i>. "See also" documentation for the private typedef.
</ul>
<li>kind =&gt; <b>ClassPrivateTypedefKind</b> <i>(string)</i>. Kind of private typedef (usually "typedef").
<li>name =&gt; <b>ClassPrivateTypedefName</b> <i>(string)</i>. Name of the private typedef.
<li>type =&gt; <b>ClassPrivateTypedefType</b> <i>(string)</i>. Data type of the private typedef.
</ul>
</ul>
</ul>
<li>protected_methods =&gt; <b>ClassProtectedMethods</b> <i>(hash)</i>. Information about the protected methods in the class.
<ul>
<li>members =&gt; <b>ClassProtectedMethodList</b> <i>(list)</i>. protected method list.
<ul>
<li> <b>ClassProtectedMethod</b> <i>(hash)</i>. A protected method.
<ul>
<li>parameters =&gt; <b>ClassProtectedMethodParams</b> <i>(list)</i>. List of the parameters of the protected method.
<ul>
<li> <b>ClassProtectedMethodParam</b> <i>(hash)</i>. A parameter of the protected method.
<ul>
<li>declaration_name =&gt; <b>ClassProtectedMethodParamName</b> <i>(string)</i>. The name of the parameter.
<li>type =&gt; <b>ClassProtectedMethodParamType</b> <i>(string)</i>. The data type of the parameter.
</ul>
</ul>
<li>protection =&gt; <b>ClassProtectedMethodProtection</b> <i>(string)</i>. Protection of the protected method.
<li>virtualness =&gt; <b>ClassProtectedMethodVirtualness</b> <i>(string)</i>. Virtualness of the protected method.
<li>detailed =&gt; <b>ClassProtectedMethodDetailed</b> <i>(hash)</i>. Detailed information about the protected method.
<ul>
<li>params =&gt; <b>ClassProtectedMethodPDBlocks</b> <i>(list)</i>. List of parameter documentation blocks for the protected method.
<ul>
<li> <b>ClassProtectedMethodPDBlock</b> <i>(hash)</i>. A parameter documentation block for the protected method.
<ul>
<li>parameters =&gt; <b>ClassProtectedMethodPDParams</b> <i>(list)</i>. Parameter list for this parameter documentation block.
<ul>
<li> <b>ClassProtectedMethodPDParam</b> <i>(hash)</i>. A parameter documented by this documentation block.
<ul>
<li>name =&gt; <b>ClassProtectedMethodPDParamName</b> <i>(string)</i>. Name of the parameter.
</ul>
</ul>
<li>doc =&gt; <b>ClassProtectedMethodPDDoc</b> <i>(doc)</i>. Documentation for this parameter documentation block.
</ul>
</ul>
<li>doc =&gt; <b>ClassProtectedMethodDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the protected method.
<li>see =&gt; <b>ClassProtectedMethodSee</b> <i>(doc)</i>. "See also" documentation for the protected method.
<li>return =&gt; <b>ClassProtectedMethodReturn</b> <i>(doc)</i>. Documentation about the return value of the protected method.
</ul>
<li>kind =&gt; <b>ClassProtectedMethodKind</b> <i>(string)</i>. Kind of protected method (usually "function").
<li>name =&gt; <b>ClassProtectedMethodName</b> <i>(string)</i>. Name of the protected method.
<li>type =&gt; <b>ClassProtectedMethodType</b> <i>(string)</i>. Data type returned by the protected method.
<li>static =&gt; <b>ClassProtectedMethodStatic</b> <i>(string)</i>. Whether the protected method is static.
</ul>
</ul>
</ul>
<li>public_typedefs =&gt; <b>ClassPublicTypedefs</b> <i>(hash)</i>. Information about the public typedefs in the class.
<ul>
<li>members =&gt; <b>ClassPublicTypedefList</b> <i>(list)</i>. public typedef list.
<ul>
<li> <b>ClassPublicTypedef</b> <i>(hash)</i>. A public typedef.
<ul>
<li>protection =&gt; <b>ClassPublicTypedefProtection</b> <i>(string)</i>. Protection of the public typedef.
<li>detailed =&gt; <b>ClassPublicTypedefDetailed</b> <i>(hash)</i>. Detailed information about the public typedef.
<ul>
<li>doc =&gt; <b>ClassPublicTypedefDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the public typedef.
<li>see =&gt; <b>ClassPublicTypedefSee</b> <i>(doc)</i>. "See also" documentation for the public typedef.
</ul>
<li>kind =&gt; <b>ClassPublicTypedefKind</b> <i>(string)</i>. Kind of public typedef (usually "typedef").
<li>name =&gt; <b>ClassPublicTypedefName</b> <i>(string)</i>. Name of the public typedef.
<li>type =&gt; <b>ClassPublicTypedefType</b> <i>(string)</i>. Data type of the public typedef.
</ul>
</ul>
</ul>
<li>public_members =&gt; <b>ClassPublicMembers</b> <i>(hash)</i>. Information about the public members in the class.
<ul>
<li>members =&gt; <b>ClassPublicMemberList</b> <i>(list)</i>. public member list.
<ul>
<li> <b>ClassPublicMember</b> <i>(hash)</i>. A public member.
<ul>
<li>protection =&gt; <b>ClassPublicMemberProtection</b> <i>(string)</i>. Protection of the public member.
<li>detailed =&gt; <b>ClassPublicMemberDetailed</b> <i>(hash)</i>. Detailed information about the public member.
<ul>
<li>doc =&gt; <b>ClassPublicMemberDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the public member.
<li>see =&gt; <b>ClassPublicMemberSee</b> <i>(doc)</i>. "See also" documentation for the public member.
</ul>
<li>kind =&gt; <b>ClassPublicMemberKind</b> <i>(string)</i>. Kind of public member (usually "variable").
<li>name =&gt; <b>ClassPublicMemberName</b> <i>(string)</i>. Name of the public member.
<li>type =&gt; <b>ClassPublicMemberType</b> <i>(string)</i>. Data type of the public member.
</ul>
</ul>
</ul>
<li>private_methods =&gt; <b>ClassPrivateMethods</b> <i>(hash)</i>. Information about the private methods in the class.
<ul>
<li>members =&gt; <b>ClassPrivateMethodList</b> <i>(list)</i>. private method list.
<ul>
<li> <b>ClassPrivateMethod</b> <i>(hash)</i>. A private method.
<ul>
<li>parameters =&gt; <b>ClassPrivateMethodParams</b> <i>(list)</i>. List of the parameters of the private method.
<ul>
<li> <b>ClassPrivateMethodParam</b> <i>(hash)</i>. A parameter of the private method.
<ul>
<li>declaration_name =&gt; <b>ClassPrivateMethodParamName</b> <i>(string)</i>. The name of the parameter.
<li>type =&gt; <b>ClassPrivateMethodParamType</b> <i>(string)</i>. The data type of the parameter.
</ul>
</ul>
<li>protection =&gt; <b>ClassPrivateMethodProtection</b> <i>(string)</i>. Protection of the private method.
<li>virtualness =&gt; <b>ClassPrivateMethodVirtualness</b> <i>(string)</i>. Virtualness of the private method.
<li>detailed =&gt; <b>ClassPrivateMethodDetailed</b> <i>(hash)</i>. Detailed information about the private method.
<ul>
<li>params =&gt; <b>ClassPrivateMethodPDBlocks</b> <i>(list)</i>. List of parameter documentation blocks for the private method.
<ul>
<li> <b>ClassPrivateMethodPDBlock</b> <i>(hash)</i>. A parameter documentation block for the private method.
<ul>
<li>parameters =&gt; <b>ClassPrivateMethodPDParams</b> <i>(list)</i>. Parameter list for this parameter documentation block.
<ul>
<li> <b>ClassPrivateMethodPDParam</b> <i>(hash)</i>. A parameter documented by this documentation block.
<ul>
<li>name =&gt; <b>ClassPrivateMethodPDParamName</b> <i>(string)</i>. Name of the parameter.
</ul>
</ul>
<li>doc =&gt; <b>ClassPrivateMethodPDDoc</b> <i>(doc)</i>. Documentation for this parameter documentation block.
</ul>
</ul>
<li>doc =&gt; <b>ClassPrivateMethodDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the private method.
<li>see =&gt; <b>ClassPrivateMethodSee</b> <i>(doc)</i>. "See also" documentation for the private method.
<li>return =&gt; <b>ClassPrivateMethodReturn</b> <i>(doc)</i>. Documentation about the return value of the private method.
</ul>
<li>kind =&gt; <b>ClassPrivateMethodKind</b> <i>(string)</i>. Kind of private method (usually "function").
<li>name =&gt; <b>ClassPrivateMethodName</b> <i>(string)</i>. Name of the private method.
<li>type =&gt; <b>ClassPrivateMethodType</b> <i>(string)</i>. Data type returned by the private method.
<li>static =&gt; <b>ClassPrivateMethodStatic</b> <i>(string)</i>. Whether the private method is static.
</ul>
</ul>
</ul>
<li>public_methods =&gt; <b>ClassPublicMethods</b> <i>(hash)</i>. Information about the public methods in the class.
<ul>
<li>members =&gt; <b>ClassPublicMethodList</b> <i>(list)</i>. public method list.
<ul>
<li> <b>ClassPublicMethod</b> <i>(hash)</i>. A public method.
<ul>
<li>parameters =&gt; <b>ClassPublicMethodParams</b> <i>(list)</i>. List of the parameters of the public method.
<ul>
<li> <b>ClassPublicMethodParam</b> <i>(hash)</i>. A parameter of the public method.
<ul>
<li>declaration_name =&gt; <b>ClassPublicMethodParamName</b> <i>(string)</i>. The name of the parameter.
<li>type =&gt; <b>ClassPublicMethodParamType</b> <i>(string)</i>. The data type of the parameter.
</ul>
</ul>
<li>protection =&gt; <b>ClassPublicMethodProtection</b> <i>(string)</i>. Protection of the public method.
<li>virtualness =&gt; <b>ClassPublicMethodVirtualness</b> <i>(string)</i>. Virtualness of the public method.
<li>detailed =&gt; <b>ClassPublicMethodDetailed</b> <i>(hash)</i>. Detailed information about the public method.
<ul>
<li>params =&gt; <b>ClassPublicMethodPDBlocks</b> <i>(list)</i>. List of parameter documentation blocks for the public method.
<ul>
<li> <b>ClassPublicMethodPDBlock</b> <i>(hash)</i>. A parameter documentation block for the public method.
<ul>
<li>parameters =&gt; <b>ClassPublicMethodPDParams</b> <i>(list)</i>. Parameter list for this parameter documentation block.
<ul>
<li> <b>ClassPublicMethodPDParam</b> <i>(hash)</i>. A parameter documented by this documentation block.
<ul>
<li>name =&gt; <b>ClassPublicMethodPDParamName</b> <i>(string)</i>. Name of the parameter.
</ul>
</ul>
<li>doc =&gt; <b>ClassPublicMethodPDDoc</b> <i>(doc)</i>. Documentation for this parameter documentation block.
</ul>
</ul>
<li>doc =&gt; <b>ClassPublicMethodDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the public method.
<li>see =&gt; <b>ClassPublicMethodSee</b> <i>(doc)</i>. "See also" documentation for the public method.
<li>return =&gt; <b>ClassPublicMethodReturn</b> <i>(doc)</i>. Documentation about the return value of the public method.
</ul>
<li>kind =&gt; <b>ClassPublicMethodKind</b> <i>(string)</i>. Kind of public method (usually "function").
<li>name =&gt; <b>ClassPublicMethodName</b> <i>(string)</i>. Name of the public method.
<li>type =&gt; <b>ClassPublicMethodType</b> <i>(string)</i>. Data type returned by the public method.
<li>static =&gt; <b>ClassPublicMethodStatic</b> <i>(string)</i>. Whether the public method is static.
</ul>
</ul>
</ul>
</ul>
</ul>
<li>files =&gt; <b>Files</b> <i>(list)</i>. Documented files.
<ul>
<li> <b>File</b> <i>(hash)</i>. A documented file.
<ul>
<li>detailed =&gt; <b>FileDetailed</b> <i>(hash)</i>. Detailed information about the file.
<ul>
<li>doc =&gt; <b>FileDetailedDoc</b> <i>(doc)</i>. Detailed documentation block for the file.
</ul>
<li>functions =&gt; <b>FileFunctions</b> <i>(hash)</i>. Information about the functions in the file.
<ul>
<li>members =&gt; <b>FileFunctionList</b> <i>(list)</i>. function list.
<ul>
<li> <b>FileFunction</b> <i>(hash)</i>. A function.
<ul>
<li>parameters =&gt; <b>FileFunctionParams</b> <i>(list)</i>. List of the parameters of the function.
<ul>
<li> <b>FileFunctionParam</b> <i>(hash)</i>. A parameter of the function.
<ul>
<li>declaration_name =&gt; <b>FileFunctionParamName</b> <i>(string)</i>. The name of the parameter.
<li>type =&gt; <b>FileFunctionParamType</b> <i>(string)</i>. The data type of the parameter.
</ul>
</ul>
<li>protection =&gt; <b>FileFunctionProtection</b> <i>(string)</i>. Protection of the function.
<li>virtualness =&gt; <b>FileFunctionVirtualness</b> <i>(string)</i>. Virtualness of the function.
<li>detailed =&gt; <b>FileFunctionDetailed</b> <i>(hash)</i>. Detailed information about the function.
<ul>
<li>params =&gt; <b>FileFunctionPDBlocks</b> <i>(list)</i>. List of parameter documentation blocks for the function.
<ul>
<li> <b>FileFunctionPDBlock</b> <i>(hash)</i>. A parameter documentation block for the function.
<ul>
<li>parameters =&gt; <b>FileFunctionPDParams</b> <i>(list)</i>. Parameter list for this parameter documentation block.
<ul>
<li> <b>FileFunctionPDParam</b> <i>(hash)</i>. A parameter documented by this documentation block.
<ul>
<li>name =&gt; <b>FileFunctionPDParamName</b> <i>(string)</i>. Name of the parameter.
</ul>
</ul>
<li>doc =&gt; <b>FileFunctionPDDoc</b> <i>(doc)</i>. Documentation for this parameter documentation block.
</ul>
</ul>
<li>doc =&gt; <b>FileFunctionDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the function.
<li>see =&gt; <b>FileFunctionSee</b> <i>(doc)</i>. "See also" documentation for the function.
<li>return =&gt; <b>FileFunctionReturn</b> <i>(doc)</i>. Documentation about the return value of the function.
</ul>
<li>kind =&gt; <b>FileFunctionKind</b> <i>(string)</i>. Kind of function (usually "function").
<li>name =&gt; <b>FileFunctionName</b> <i>(string)</i>. Name of the function.
<li>type =&gt; <b>FileFunctionType</b> <i>(string)</i>. Data type returned by the function.
<li>static =&gt; <b>FileFunctionStatic</b> <i>(string)</i>. Whether the function is static.
</ul>
</ul>
</ul>
<li>name =&gt; <b>FileName</b> <i>(string)</i>. Name of the file.
<li>variables =&gt; <b>FileVariables</b> <i>(hash)</i>. Information about the variables in the file.
<ul>
<li>members =&gt; <b>FileVariableList</b> <i>(list)</i>. variable list.
<ul>
<li> <b>FileVariable</b> <i>(hash)</i>. A variable.
<ul>
<li>protection =&gt; <b>FileVariableProtection</b> <i>(string)</i>. Protection of the variable.
<li>detailed =&gt; <b>FileVariableDetailed</b> <i>(hash)</i>. Detailed information about the variable.
<ul>
<li>doc =&gt; <b>FileVariableDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the variable.
<li>see =&gt; <b>FileVariableSee</b> <i>(doc)</i>. "See also" documentation for the variable.
</ul>
<li>kind =&gt; <b>FileVariableKind</b> <i>(string)</i>. Kind of variable (usually "variable").
<li>name =&gt; <b>FileVariableName</b> <i>(string)</i>. Name of the variable.
<li>type =&gt; <b>FileVariableType</b> <i>(string)</i>. Data type of the variable.
</ul>
</ul>
</ul>
<li>typedefs =&gt; <b>FileTypedefs</b> <i>(hash)</i>. Information about the typedefs in the file.
<ul>
<li>members =&gt; <b>FileTypedefList</b> <i>(list)</i>. typedef list.
<ul>
<li> <b>FileTypedef</b> <i>(hash)</i>. A typedef.
<ul>
<li>protection =&gt; <b>FileTypedefProtection</b> <i>(string)</i>. Protection of the typedef.
<li>detailed =&gt; <b>FileTypedefDetailed</b> <i>(hash)</i>. Detailed information about the typedef.
<ul>
<li>doc =&gt; <b>FileTypedefDetailedDoc</b> <i>(doc)</i>. Detailed documentation for the typedef.
<li>see =&gt; <b>FileTypedefSee</b> <i>(doc)</i>. "See also" documentation for the typedef.
</ul>
<li>kind =&gt; <b>FileTypedefKind</b> <i>(string)</i>. Kind of typedef (usually "typedef").
<li>name =&gt; <b>FileTypedefName</b> <i>(string)</i>. Name of the typedef.
<li>type =&gt; <b>FileTypedefType</b> <i>(string)</i>. Data type of the typedef.
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>
</ul>

\htmlonly
Go to the <a href="arch.html">next</a> section or return to the
 <a href="index.html">index</a>.
\endhtmlonly

*/
