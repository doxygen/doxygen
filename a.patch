diff --git a/doc_internal/Doxyfile.in b/doc_internal/Doxyfile.in
index bfd0caca5..5cde03873 100644
--- a/doc_internal/Doxyfile.in
+++ b/doc_internal/Doxyfile.in
@@ -254,6 +254,7 @@ COMPACT_RTF            = NO
 RTF_HYPERLINKS         = NO
 RTF_STYLESHEET_FILE    =
 RTF_EXTENSIONS_FILE    =
+RTF_USE_PNG            = NO
 #---------------------------------------------------------------------------
 # Configuration options related to the man page output
 #---------------------------------------------------------------------------
diff --git a/src/config.xml b/src/config.xml
index 2cf668358..d4d423660 100644
--- a/src/config.xml
+++ b/src/config.xml
@@ -868,7 +868,7 @@ Go to the <a href="commands.html">next</a> section or return to the
     <option type='enum' id='TIMESTAMP' defval='NO'>
       <docs>
 <![CDATA[
- If the \c TIMESTAMP tag is set different from \c NO then 
+ If the \c TIMESTAMP tag is set different from \c NO then
  each generated page will contain the date or date and time when the page
  was generated. Setting this to \c NO can help when comparing the output of
  multiple runs.
@@ -1927,7 +1927,7 @@ to disable this feature.
     <option type='list' id='IGNORE_PREFIX' format='string' depends='ALPHABETICAL_INDEX'>
       <docs>
 <![CDATA[
- The \c IGNORE_PREFIX tag can be used to specify a prefix 
+ The \c IGNORE_PREFIX tag can be used to specify a prefix
  (or a list of prefixes) that should be ignored while generating the index headers.
  The \c IGNORE_PREFIX tag works for classes, function and member names.
  The entity will be placed in the alphabetical list under the first letter of the entity name that remains
@@ -2437,7 +2437,7 @@ The \c DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.
  generated documentation will be placed on the server by the user during the deployment
  of the documentation.
  The generated sitemap is called `sitemap.xml` and placed on the directory specified by
- \ref cfg_html_output "HTML_OUTPUT". In case no \c SITEMAP_URL is specified no 
+ \ref cfg_html_output "HTML_OUTPUT". In case no \c SITEMAP_URL is specified no
  sitemap is generated.
  For information about the sitemap protocol see https://www.sitemaps.org
 ]]>
@@ -3252,6 +3252,14 @@ The following block name is set based on whether or not a feature is used in the
  The \c RTF_OUTPUT tag is used to specify where the RTF docs will be put.
  If a relative path is entered the value of \ref cfg_output_directory "OUTPUT_DIRECTORY" will be
  put in front of it.
+]]>
+      </docs>
+    </option>
+    <option type='bool' id='RTF_USE_PNG' defval='0' depends='GENERATE_RTF'>
+      <docs>
+<![CDATA[
+  If the \c RTF_USE_PNG tag is set to \c YES, doxygen will use the png for dot
+  and plantuml, whatever the \c DOT_IMAGE_FORMAT is.
 ]]>
       </docs>
     </option>
@@ -3539,7 +3547,7 @@ If set to \c NO, doxygen will warn if an a database file is already found and no
  contain include files that are not input files but should be processed by
  the preprocessor.
 
- Note that the \c INCLUDE_PATH is not recursive, so the setting of \ref cfg_recursive "RECURSIVE" 
+ Note that the \c INCLUDE_PATH is not recursive, so the setting of \ref cfg_recursive "RECURSIVE"
  has no effect here.
 ]]>
       </docs>
@@ -3631,8 +3639,8 @@ where `loc1` and `loc2` can be relative or absolute paths or URLs.
     <option type='bool' id='ALLEXTERNALS' defval='0'>
       <docs>
 <![CDATA[
- If the \c ALLEXTERNALS tag is set to \c YES, all external classes and namespaces 
- will be listed in the class and namespace index. 
+ If the \c ALLEXTERNALS tag is set to \c YES, all external classes and namespaces
+ will be listed in the class and namespace index.
  If set to \c NO, only the inherited external classes will be listed.
 ]]>
       </docs>
diff --git a/src/docbookvisitor.cpp b/src/docbookvisitor.cpp
index fe2a041ad..2ec08dd37 100644
--- a/src/docbookvisitor.cpp
+++ b/src/docbookvisitor.cpp
@@ -1629,7 +1629,7 @@ DB_VIS_C
     shortName=shortName.right(shortName.length()-i-1);
   }
   QCString outDir = Config_getString(DOCBOOK_OUTPUT);
-  writeDotGraphFromFile(baseName+".dot",outDir,shortName,GOF_BITMAP,s.srcFile(),s.srcLine());
+  writeDotGraphFromFile(baseName+".dot",outDir,shortName,GOF_BITMAP,s.srcFile(),s.srcLine(),false);
   visitPreStart(m_t, s.children(), s.hasCaption(), s.relPath() + shortName + "." + getDotImageExtension(), s.width(),s.height());
   visitCaption(s.children());
   visitPostEnd(m_t, s.hasCaption());
@@ -1658,7 +1658,7 @@ DB_VIS_C
   baseName.prepend("dot_");
   QCString outDir = Config_getString(DOCBOOK_OUTPUT);
   QCString imgExt = getDotImageExtension();
-  writeDotGraphFromFile(fileName,outDir,baseName,GOF_BITMAP,srcFile,srcLine);
+  writeDotGraphFromFile(fileName,outDir,baseName,GOF_BITMAP,srcFile,srcLine,false);
   m_t << "<para>\n";
   visitPreStart(m_t, children, hasCaption, baseName + "." + imgExt,  width,  height);
 }
diff --git a/src/dot.cpp b/src/dot.cpp
index 11ac2a454..58bbd0aad 100644
--- a/src/dot.cpp
+++ b/src/dot.cpp
@@ -229,7 +229,7 @@ bool DotManager::run()
 
 void writeDotGraphFromFile(const QCString &inFile,const QCString &outDir,
                            const QCString &outFile,GraphOutputFormat format,
-                           const QCString &srcFile,int srcLine)
+                           const QCString &srcFile,int srcLine, bool isRtf)
 {
   Dir d(outDir.str());
   if (!d.exists())
@@ -237,7 +237,14 @@ void writeDotGraphFromFile(const QCString &inFile,const QCString &outDir,
     term("Output dir %s does not exist!\n",qPrint(outDir));
   }
 
+  QCString jobFormat = Config_getEnumAsString(DOT_IMAGE_FORMAT);
   QCString imgExt = getDotImageExtension();
+  if(isRtf && format == GOF_BITMAP && Config_getBool(RTF_USE_PNG))
+  {
+    imgExt = "png";
+    jobFormat = "png";
+  }
+
   QCString imgName = QCString(outFile)+"."+imgExt;
   QCString absImgName = QCString(d.absPath())+"/"+imgName;
   QCString absOutFile = QCString(d.absPath())+"/"+outFile;
@@ -245,7 +252,7 @@ void writeDotGraphFromFile(const QCString &inFile,const QCString &outDir,
   DotRunner dotRun(inFile);
   if (format==GOF_BITMAP)
   {
-    dotRun.addJob(Config_getEnumAsString(DOT_IMAGE_FORMAT),absImgName,srcFile,srcLine);
+    dotRun.addJob(jobFormat,absImgName,srcFile,srcLine);
   }
   else // format==GOF_EPS
   {
diff --git a/src/dot.h b/src/dot.h
index a22dab787..61c2d16fe 100644
--- a/src/dot.h
+++ b/src/dot.h
@@ -49,7 +49,7 @@ class DotManager
 
 void writeDotGraphFromFile(const QCString &inFile,const QCString &outDir,
                            const QCString &outFile,GraphOutputFormat format,
-                           const QCString &srcFile,int srcLine);
+                           const QCString &srcFile,int srcLine, bool isRtf);
 void writeDotImageMapFromFile(TextStream &t,
                               const QCString &inFile, const QCString& outDir,
                               const QCString &relPath,const QCString& baseName,
diff --git a/src/dotgraph.cpp b/src/dotgraph.cpp
index 482defcd8..46f1af5e8 100644
--- a/src/dotgraph.cpp
+++ b/src/dotgraph.cpp
@@ -106,8 +106,12 @@ static bool insertMapFile(TextStream &out,const QCString &mapFile,
 
 QCString DotGraph::imgName() const
 {
-  return m_baseName + ((m_graphFormat == GOF_BITMAP) ?
-                      ("." + getDotImageExtension()) : (Config_getBool(USE_PDFLATEX) ? ".pdf" : ".eps"));
+  return m_baseName + (
+      (m_graphFormat == GOF_BITMAP)
+        ? ((m_textFormat == EOF_Rtf && Config_getBool(RTF_USE_PNG))
+          ? ".png" : "." + getDotImageExtension())
+        : (Config_getBool(USE_PDFLATEX) ? ".pdf" : ".eps")
+  );
 }
 
 std::mutex g_dotIndexListMutex;
@@ -188,9 +192,15 @@ bool DotGraph::prepareDotFile()
 
   if (m_graphFormat == GOF_BITMAP)
   {
+    QCString jobFormat = Config_getEnumAsString(DOT_IMAGE_FORMAT);
+    if(m_textFormat == EOF_Rtf && Config_getBool(RTF_USE_PNG))
+    {
+      jobFormat = "png";
+    }
+
     // run dot to create a bitmap image
     DotRunner * dotRun = DotManager::instance()->createRunner(absDotName(), sigStr);
-    dotRun->addJob(Config_getEnumAsString(DOT_IMAGE_FORMAT), absImgName(), absDotName(), 1);
+    dotRun->addJob(jobFormat, absImgName(), absDotName(), 1);
     if (m_generateImageMap) dotRun->addJob(MAP_CMD, absMapName(), absDotName(), 1);
   }
   else if (m_graphFormat == GOF_EPS)
diff --git a/src/htmldocvisitor.cpp b/src/htmldocvisitor.cpp
index 466e3c3db..d32a40598 100644
--- a/src/htmldocvisitor.cpp
+++ b/src/htmldocvisitor.cpp
@@ -2208,7 +2208,7 @@ void HtmlDocVisitor::writeDotFile(const QCString &fn,const QCString &relPath,
   }
   baseName.prepend("dot_");
   QCString outDir = Config_getString(HTML_OUTPUT);
-  writeDotGraphFromFile(fn,outDir,baseName,GOF_BITMAP,srcFile,srcLine);
+  writeDotGraphFromFile(fn,outDir,baseName,GOF_BITMAP,srcFile,srcLine,false);
   writeDotImageMapFromFile(m_t,fn,outDir,relPath,baseName,context,-1,srcFile,srcLine);
 }
 
diff --git a/src/latexdocvisitor.cpp b/src/latexdocvisitor.cpp
index 451c18970..836d29fe5 100644
--- a/src/latexdocvisitor.cpp
+++ b/src/latexdocvisitor.cpp
@@ -1910,7 +1910,7 @@ void LatexDocVisitor::startDotFile(const QCString &fileName,
   baseName.prepend("dot_");
   QCString outDir = Config_getString(LATEX_OUTPUT);
   QCString name = fileName;
-  writeDotGraphFromFile(name,outDir,baseName,GOF_EPS,srcFile,srcLine);
+  writeDotGraphFromFile(name,outDir,baseName,GOF_EPS,srcFile,srcLine,false);
   visitPreStart(m_t,hasCaption, baseName, width, height);
 }
 
diff --git a/src/rtfdocvisitor.cpp b/src/rtfdocvisitor.cpp
index f0801398a..ff9da3765 100644
--- a/src/rtfdocvisitor.cpp
+++ b/src/rtfdocvisitor.cpp
@@ -67,6 +67,18 @@ QCString RTFDocVisitor::getStyle(const QCString &name)
   return sd.reference();
 }
 
+QCString RTFDocVisitor::getDotImageExtension()
+{
+  if(Config_getBool(RTF_USE_PNG))
+  {
+    return "png";
+  }
+  else
+  {
+    return ::getDotImageExtension();
+  }
+}
+
 int RTFDocVisitor::indentLevel() const
 {
   return std::min(m_indentLevel,maxIndentLevels-1);
@@ -1709,8 +1721,8 @@ void RTFDocVisitor::writeDotFile(const QCString &filename, bool hasCaption,
     baseName=baseName.right(baseName.length()-i-1);
   }
   QCString outDir = Config_getString(RTF_OUTPUT);
-  writeDotGraphFromFile(filename,outDir,baseName,GOF_BITMAP,srcFile,srcLine);
   QCString imgExt = getDotImageExtension();
+  writeDotGraphFromFile(filename,outDir,baseName,GOF_BITMAP,srcFile,srcLine,true);
   includePicturePreRTF(baseName + "." + imgExt, true, hasCaption);
 }
 
diff --git a/src/rtfdocvisitor.h b/src/rtfdocvisitor.h
index 26e006dde..6daea4277 100644
--- a/src/rtfdocvisitor.h
+++ b/src/rtfdocvisitor.h
@@ -119,6 +119,7 @@ class RTFDocVisitor : public DocVisitor
                    const QCString &anchor);
     void endLink(const QCString &ref);
     QCString getStyle(const QCString &name);
+    QCString getDotImageExtension();
 
     int indentLevel() const;
     void incIndentLevel();
diff --git a/src/rtfgen.cpp b/src/rtfgen.cpp
index 25a0e70a1..56d7166dc 100644
--- a/src/rtfgen.cpp
+++ b/src/rtfgen.cpp
@@ -2232,6 +2232,18 @@ static bool preProcessFile(Dir &d,const QCString &infName, TextStream &t, bool b
   return TRUE;
 }
 
+QCString RTFGenerator::getDotImageExtension()
+{
+  if(Config_getBool(RTF_USE_PNG))
+  {
+    return "png";
+  }
+  else
+  {
+    return ::getDotImageExtension();
+  }
+}
+
 void RTFGenerator::startDotGraph()
 {
   DBG_RTF(m_t << "{\\comment (startDotGraph)}\n")
diff --git a/src/rtfgen.h b/src/rtfgen.h
index e9026fa18..6d353f36d 100644
--- a/src/rtfgen.h
+++ b/src/rtfgen.h
@@ -290,6 +290,7 @@ class RTFGenerator : public OutputGenerator
     QCString rtf_EList_DepthStyle();
     QCString rtf_LCList_DepthStyle();
     QCString rtf_DList_DepthStyle();
+    QCString getDotImageExtension();
     void beginRTFDocument();
     void beginRTFChapter();
     void beginRTFSection();

